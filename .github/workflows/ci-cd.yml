name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: task_manager_test
          MYSQL_USER: taskmasteruser
          MYSQL_PASSWORD: Chafaa2025
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: '8.2'
        extensions: mbstring, xml, ctype, iconv, intl, pdo, pdo_mysql, dom, filter, gd, json, sodium
        coverage: none

    - name: Get composer cache directory
      id: composer-cache
      run: echo "dir=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT

    - name: Cache composer dependencies
      uses: actions/cache@v3
      with:
        path: ${{ steps.composer-cache.outputs.dir }}
        key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
        restore-keys: ${{ runner.os }}-composer-

    - name: Install dependencies
      run: composer install --no-progress --prefer-dist --optimize-autoloader

    - name: Copy .env.test file
      run: cp .env.test .env

    - name: Generate JWT keys
      run: |
        mkdir -p config/jwt
        openssl genpkey -algorithm RSA -pkcs8 -out config/jwt/private.pem -pass pass:HelloChafaa
        openssl rsa -pubout -in config/jwt/private.pem -out config/jwt/public.pem -passin pass:HelloChafaa

    - name: Create database
      run: |
        php bin/console doctrine:database:create --env=test
        php bin/console doctrine:schema:create --env=test

    - name: Load fixtures
      run: php bin/console doctrine:fixtures:load --no-interaction --env=test

    - name: Run tests
      run: |
        php bin/phpunit tests/Entity/
        php bin/phpunit tests/Service/
        php bin/phpunit tests/Controller/

    - name: Check code style (optional)
      run: |
        if [ -f vendor/bin/php-cs-fixer ]; then
          vendor/bin/php-cs-fixer fix --dry-run --diff
        fi

  deploy:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Deploy notification
      run: |
        echo "ðŸš€ Ready to deploy to production!"
        echo "All tests passed successfully âœ…"
        # Ajoutez ici vos Ã©tapes de dÃ©ploiement si nÃ©cessaire